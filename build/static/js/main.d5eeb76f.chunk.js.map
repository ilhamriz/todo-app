{"version":3,"sources":["Provider/snackbar-provider.module.scss","components/AddCard/AddCard.jsx","components/Button/Button.jsx","Provider/snackbar-provider.jsx","components/AddCard/AddCardForm/AddCardForm.jsx","components/AddList/AddList.jsx","components/MenuCard/MenuCard.jsx","components/Card/Card.jsx","components/ListHeader/ListHeader.jsx","components/ChangeBackground/ChangeBackground.jsx","components/shared/Icons.jsx","components/Todo/Todo.jsx","App.js","index.js"],"names":["module","exports","AddCard","handleOpenAddCard","list","datas","isAddOpen","className","onClick","id","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","some","el","listID","Button","children","type","typeButton","classButton","btnCard","SnackbarContext","createContext","SnackbarProvider","useState","open","message","snackbar","setSnackbar","useEffect","setTimeout","state","contextValue","useMemo","Provider","value","css","snackbar_show","AddCardForm","handleAddData","useContext","inputRef","useRef","addRef","input","setInput","handleClickOutside","event","current","contains","target","handleCloseCard","focus","scrollIntoView","behavior","autosize","document","addEventListener","removeEventListener","ref","onSubmit","preventDefault","length","replace","style","onChange","e","placeholder","AddList","lists","handleAddList","setIsAddOpen","autoComplete","MenuCard","handleMenuCard","currentList","menuTop","isOpenMove","setIsOpenMove","top","d","filter","map","CSSTransition","in","appear","timeout","classNames","title","Card","data","handleEditData","modalRef","cardRef","offsetTop","setOffsetTop","offsetLeft","setOffsetLeft","setMenuTop","isEdit","setIsEdit","name","inputEdit","setInputEdit","element","getElementById","handleCardPosition","scrollLeft","select","inputHeight","offsetHeight","window","innerHeight","newOffsetTop","Math","abs","offsetWidth","innerWidth","left","ListHeader","handleEditList","handleDeleteAllData","handleDeleteList","formRef","headerRef","popRef","extraRef","isFocus","setIsFocus","isPop","setIsPop","handleAction","action","dispatchEvent","Event","cancelable","bubbles","blur","ChangeBackground","isChangeBg","setIsChangeBg","handleChange","backgroundColor","background","checked","IconMenu","Todo","setLists","setDatas","setBackgroundColor","isMobile","setIsMobile","newList","index","findIndex","tempArray","splice","JSON","parse","localStorage","getItem","handleResize","setItem","stringify","newData","task","forEach","handleDeleteData","href","rel","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d5eeb76f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackbar\":\"snackbar-provider_snackbar__3LmlT\",\"success\":\"snackbar-provider_success__1uDB0\",\"error\":\"snackbar-provider_error__3D3OW\",\"snackbar_show\":\"snackbar-provider_snackbar_show__1wOdX\"};","import './AddCard.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCard({handleOpenAddCard, list, datas}) {\r\n  return (\r\n    <>\r\n    {!list.isAddOpen &&\r\n      <div className=\"todo__add\">\r\n        <div className=\"todo__add__open\" onClick={()=>handleOpenAddCard(list.id)}>\r\n          <svg className='plus__icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" >\r\n            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>\r\n\r\n          {datas.some(el => el.listID === list.id) ? (\r\n            <span>Add another card</span>\r\n          ) : (\r\n            <span>Add a card</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    }\r\n    </>\r\n  )\r\n};\r\n\r\nAddCard.propTypes = {\r\n  list: PropTypes.object,\r\n  datas: PropTypes.array,\r\n  handleOpenAddCard: PropTypes.func,\r\n};\r\n\r\nexport default AddCard;","import \"./Button.scss\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ children, type, btnCard }) {\r\n  const typeButton = type ? type : \"button\";\r\n  const classButton = btnCard ? \"btn--primary btn--card\" : \"btn--primary\";\r\n  return (\r\n    <button type={typeButton} className={classButton}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.string,\r\n  type: PropTypes.string,\r\n  btnCard: PropTypes.bool,\r\n};\r\n\r\nexport default Button;","import { createContext, useEffect, useMemo, useState } from \"react\";\r\nimport css from \"./snackbar-provider.module.scss\";\r\n\r\nexport const SnackbarContext = createContext();\r\nconst SnackbarProvider = ({ children }) => {\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    type: \"success\",\r\n    message: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (snackbar?.open) {\r\n      setTimeout(() => {\r\n        setSnackbar((state) => ({ ...state, open: false }));\r\n      }, 3000);\r\n    }\r\n  }, [snackbar]);\r\n\r\n  const contextValue = useMemo(\r\n    () => ({\r\n      setSnackbar: (message, type = \"success\") => {\r\n        if (message)\r\n          setSnackbar((state) => ({ ...state, message, type, open: true }));\r\n      },\r\n    }),\r\n    [setSnackbar]\r\n  );\r\n\r\n  return (\r\n    <SnackbarContext.Provider value={contextValue}>\r\n      <div\r\n        className={`${css.snackbar} ${css[snackbar?.type]} ${\r\n          snackbar?.open && css.snackbar_show\r\n        }`}\r\n      >\r\n        <span>{snackbar?.message}</span>\r\n      </div>\r\n      {children}\r\n    </SnackbarContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SnackbarProvider;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport autosize from \"autosize\";\r\nimport Button from \"../../Button\";\r\nimport \"./AddCardForm.scss\";\r\nimport { SnackbarContext } from \"../../../Provider/snackbar-provider\";\r\n\r\nfunction AddCardForm({ handleAddData, list, handleOpenAddCard }) {\r\n  const { setSnackbar } = useContext(SnackbarContext);\r\n  const inputRef = useRef(null);\r\n  const addRef = useRef(null);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const spaceRegex = /\\s/g;\r\n    if (!input.length || !input.replace(spaceRegex, \"\")) {\r\n      setSnackbar(\"Card must be filled out\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (input.length > 500) {\r\n      setSnackbar(\"Your text is too long\", \"error\");\r\n      return;\r\n    }\r\n\r\n    handleAddData(input, list.id);\r\n    setInput(\"\");\r\n    inputRef.current.focus();\r\n    inputRef.current.style.height = \"90px\";\r\n  }\r\n\r\n  function handleClickOutside(event) {\r\n    if (addRef.current && !addRef.current.contains(event.target)) {\r\n      handleCloseCard();\r\n    }\r\n  }\r\n  function handleCloseCard() {\r\n    setInput(\"\");\r\n    handleOpenAddCard(list.id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (list.isAddOpen) {\r\n      inputRef.current.focus();\r\n      addRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      autosize(inputRef.current);\r\n\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    }\r\n  }, [list.isAddOpen]);\r\n\r\n  return (\r\n    <>\r\n      {list.isAddOpen && (\r\n        <form className=\"todo__add__form\" ref={addRef} onSubmit={handleSubmit}>\r\n          <textarea\r\n            className=\"item__edit__input\"\r\n            ref={inputRef}\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Enter a title for this card...\"\r\n          />\r\n          <div className=\"add__button\">\r\n            <Button type=\"submit\" btnCard>\r\n              Add Card\r\n            </Button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"add__button--close\"\r\n              onClick={handleCloseCard}\r\n            >\r\n              <svg\r\n                className=\"close__icon\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nAddCardForm.propTypes = {\r\n  handleAddData: PropTypes.func,\r\n  handleOpenAddCard: PropTypes.func,\r\n  list: PropTypes.object,\r\n};\r\n\r\nexport default AddCardForm;\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport './AddList.scss'\r\nimport autosize from 'autosize';\r\nimport Button from '../Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddList({lists, handleAddList}) {\r\n  const inputRef = useRef(null);\r\n  const addRef = useRef(null);\r\n\r\n  const [isAddOpen, setIsAddOpen] = useState(false);\r\n  const [input, setInput] = useState('');\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (!input.length) {\r\n      return;\r\n    }\r\n    handleAddList(input);\r\n    setInput('');\r\n    setIsAddOpen(false);\r\n  }\r\n\r\n  function handleClickOutside(event) {\r\n    if (addRef.current && !addRef.current.contains(event.target)) {\r\n      handleCloseCard()\r\n    }\r\n  }\r\n  function handleCloseCard() {\r\n    setInput('');\r\n    setIsAddOpen(false);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (isAddOpen) {\r\n      inputRef.current.focus();\r\n      autosize(inputRef.current);\r\n\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      }\r\n    }\r\n  }, [isAddOpen]);\r\n\r\n  return (\r\n    <div className={isAddOpen ? 'todo__add-list--open': 'todo__add-list'} ref={addRef}>\r\n      {isAddOpen ? (\r\n        <>\r\n          <form className=\"add-list__form\" onSubmit={handleSubmit}>\r\n            <input\r\n              className='add-list__input'\r\n              ref={inputRef}\r\n              value={input}\r\n              onChange={(e)=>setInput(e.target.value)}\r\n              placeholder='Enter list title...'\r\n              autoComplete='off'\r\n            />\r\n            <div className='add__button'>\r\n              <Button type='submit' btnCard>Add List</Button>\r\n              <button type='button' className='add__button--close' onClick={handleCloseCard}>\r\n                <svg className='close__icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n        ) : (\r\n        <>\r\n          <div className=\"add-list__open\" onClick={()=>setIsAddOpen(true)}>\r\n            <svg className='plus__icon--white' xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" >\r\n              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n            </svg>\r\n\r\n            {lists.length ? (\r\n              <span>Add another list</span>\r\n            ) : (\r\n              <span>Add a list</span>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nAddList.propTypes = {\r\n  lists: PropTypes.array,\r\n  handleAddList: PropTypes.func,\r\n};\r\n\r\nexport default AddList\r\n","import PropTypes from 'prop-types';\r\nimport './MenuCard.scss';\r\nimport { useState } from 'react';\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nfunction MenuCard({lists, handleMenuCard, currentList, menuTop}) {\r\n  const [isOpenMove, setIsOpenMove] = useState(false);\r\n\r\n  return (\r\n    <div className=\"menu-list\" style={{top: `${menuTop}px`}}>\r\n      \r\n      <div className='menu-list__item' onClick={()=>setIsOpenMove(!isOpenMove)}>\r\n        <span className='menu-list__icon-wrapper'>\r\n          <svg className='menu-list__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M16.172 11l-5.364-5.364 1.414-1.414L20 12l-7.778 7.778-1.414-1.414L16.172 13H4v-2z\"/></svg>\r\n        </span>\r\n        <span>Move</span>\r\n      </div>\r\n\r\n      {isOpenMove && (\r\n        <>\r\n          {lists.filter(el => el.id !== currentList).map(list => (\r\n            <CSSTransition\r\n              key={list.id}\r\n              in={isOpenMove}\r\n              appear={true}\r\n              timeout={300}\r\n              classNames=\"menu-fade\"\r\n            >\r\n              <div key={list.id} className='menu-list__item--move' onClick={()=>handleMenuCard(list.id)}>\r\n                {list.title}\r\n              </div>\r\n            </CSSTransition>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      <div className='menu-list__item' onClick={()=>handleMenuCard('delete')}>\r\n        <span className='menu-list__icon-wrapper'>\r\n          <svg className='menu-list__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M17 6h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3zm1 2H6v12h12V8zM9 4v2h6V4H9z\"/></svg>\r\n        </span>\r\n        <span>Delete</span>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nMenuCard.propTypes = {\r\n  lists: PropTypes.array,\r\n  handleMenuCard: PropTypes.func,\r\n  currentList: PropTypes.number,\r\n  menuTop: PropTypes.number,\r\n}\r\n\r\nexport default MenuCard\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport autosize from \"autosize\";\r\nimport MenuCard from \"../MenuCard\";\r\nimport Button from \"../Button\";\r\nimport \"./Card.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SnackbarContext } from \"../../Provider/snackbar-provider\";\r\n\r\nfunction Card({ datas, data, lists, handleMenuCard, handleEditData }) {\r\n  const { setSnackbar } = useContext(SnackbarContext);\r\n  const inputRef = useRef(null);\r\n  const modalRef = useRef(null);\r\n  const cardRef = useRef(null);\r\n\r\n  const [offsetTop, setOffsetTop] = useState(0);\r\n  const [offsetLeft, setOffsetLeft] = useState(0);\r\n  const [menuTop, setMenuTop] = useState(0);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [inputEdit, setInputEdit] = useState(data.name);\r\n\r\n  let element = document.getElementById(\"todo__canvas\");\r\n\r\n  useEffect(() => {\r\n    handleCardPosition();\r\n    element.addEventListener(\"scroll\", handleCardPosition);\r\n\r\n    return () => {\r\n      element.removeEventListener(\"scroll\", handleCardPosition);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // situation when a card deleted\r\n    handleCardPosition();\r\n  }, [datas]);\r\n\r\n  function handleCardPosition() {\r\n    setOffsetTop(cardRef.current.offsetTop);\r\n    setOffsetLeft(cardRef.current.offsetLeft - element.scrollLeft);\r\n  }\r\n\r\n  function handleSubmitEdit(event) {\r\n    event.preventDefault();\r\n    const spaceRegex = /\\s/g;\r\n    if (!inputEdit.length || !inputEdit.replace(spaceRegex, \"\")) {\r\n      setSnackbar(\"Card must be filled out\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (inputEdit.length > 500) {\r\n      setSnackbar(\"Your text is too long\", \"error\");\r\n      return;\r\n    }\r\n    handleEditData(data.id, inputEdit);\r\n    setIsEdit(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      inputRef.current.focus();\r\n      inputRef.current.select();\r\n      autosize(inputRef.current);\r\n\r\n      let inputHeight = inputRef.current.offsetHeight;\r\n      let cardHeight = inputHeight + offsetTop + 52; // 52 is for Save button\r\n\r\n      if (cardHeight > window.innerHeight) {\r\n        let newOffsetTop = window.innerHeight - (inputHeight + 60);\r\n        setOffsetTop(newOffsetTop);\r\n\r\n        if (inputHeight > window.innerHeight) {\r\n          setMenuTop(Math.abs(newOffsetTop) + 24);\r\n        }\r\n      }\r\n\r\n      function handleClickOutside(event) {\r\n        if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n          setIsEdit(false);\r\n          setInputEdit(data.name);\r\n        }\r\n      }\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    }\r\n  }, [isEdit]);\r\n\r\n  function handleClickCard() {\r\n    if (!isEdit) {\r\n      if (cardRef.current.offsetLeft - element.scrollLeft < 0) {\r\n        cardRef.current.scrollIntoView();\r\n        element.scrollLeft -= 16;\r\n      }\r\n      if (cardRef.current.offsetWidth + offsetLeft > window.innerWidth) {\r\n        cardRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        element.scrollLeft += 150;\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setIsEdit(true);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li className=\"todo__item\" ref={cardRef} onClick={handleClickCard}>\r\n      <div className=\"item__main\">\r\n        <div className=\"item__task\">{data.name}</div>\r\n      </div>\r\n      {isEdit && (\r\n        <div className=\"item__edit\">\r\n          <form\r\n            className=\"item__edit__card\"\r\n            onSubmit={handleSubmitEdit}\r\n            ref={modalRef}\r\n            style={{ top: `${offsetTop}px`, left: `${offsetLeft}px` }}\r\n          >\r\n            <textarea\r\n              className=\"item__edit__input\"\r\n              ref={inputRef}\r\n              value={inputEdit}\r\n              onChange={(e) => setInputEdit(e.target.value)}\r\n            />\r\n\r\n            <CSSTransition\r\n              in={isEdit}\r\n              appear={true}\r\n              timeout={200}\r\n              classNames=\"fade\"\r\n            >\r\n              <MenuCard\r\n                lists={lists}\r\n                handleMenuCard={handleMenuCard}\r\n                currentList={data.listID}\r\n                menuTop={menuTop}\r\n              />\r\n            </CSSTransition>\r\n\r\n            <div>\r\n              <Button type=\"submit\">Save</Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  datas: PropTypes.array,\r\n  data: PropTypes.object,\r\n  lists: PropTypes.array,\r\n  handleMenuCard: PropTypes.func,\r\n  handleEditData: PropTypes.func,\r\n};\r\n\r\nexport default Card;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './ListHeader.scss';\r\n\r\nfunction ListHeader({list, handleEditList, handleOpenAddCard, handleDeleteAllData, handleDeleteList}) {\r\n  const formRef = useRef();\r\n  const inputRef = useRef();\r\n  const headerRef = useRef();\r\n  const popRef = useRef();\r\n  const extraRef = useRef();\r\n\r\n  const [input, setInput] = useState(list.title);\r\n  const [isFocus, setIsFocus] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n\r\n  const submitTest = (event) => {\r\n    event.preventDefault();\r\n    handleEditList(list.id, input);\r\n    inputRef.current.blur();\r\n  }\r\n\r\n  function handleAction(action) {\r\n    setIsPop(false);\r\n\r\n    switch (action) {\r\n      case 'add_card':\r\n        handleOpenAddCard(list.id);\r\n        break;    \r\n      case 'delete_all_card':\r\n        handleDeleteAllData(list.id);\r\n        break;    \r\n      default:\r\n        handleDeleteList(list.id);\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setInput(list.title);\r\n  }, [list])\r\n\r\n  useEffect(() => {\r\n    if (isFocus) {\r\n      function handleClickOutside(event) {\r\n        if (formRef.current && !formRef.current.contains(event.target)) {\r\n          // Untuk submit form melalui useRef\r\n          formRef.current.dispatchEvent(new Event('submit', { cancelable: true, bubbles: true }));\r\n          setIsFocus(false);\r\n        }\r\n      }\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      }\r\n    }\r\n  }, [isFocus])\r\n\r\n  useEffect(() => {\r\n    if (isPop) {\r\n      function handleClickOutside(event) {\r\n        if ((popRef.current && !popRef.current.contains(event.target)) && (extraRef.current && !extraRef.current.contains(event.target))) {\r\n          setIsPop(false);\r\n        }\r\n      }\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      }\r\n    }\r\n  }, [isPop]);\r\n\r\n  return (\r\n    <>\r\n    <div className=\"list-header\" ref={headerRef}>\r\n      <form className='list-header__form' ref={formRef} onClick={()=>setIsFocus(true)} onSubmit={submitTest}>\r\n        <input\r\n          className='list-header__input'\r\n          value={input}\r\n          ref={inputRef}\r\n          onChange={(e)=>setInput(e.target.value)}\r\n          autoComplete='off'\r\n        />\r\n      </form>\r\n      <button type='button' className=\"list-header__extra\" ref={extraRef} onClick={()=>setIsPop(!isPop)}>\r\n        <svg className='list-header__extra__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M5 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm14 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-7 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n      </button>\r\n\r\n      {isPop && (\r\n        <div className=\"pop-over\" ref={popRef}>\r\n          <div className=\"pop-over__header\">\r\n            <span className=\"pop-over__header__title\">List actions</span>\r\n            <button type='button' className='pop-over__header__close' onClick={()=>setIsPop(false)}>\r\n              <svg className='close__icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div className=\"pop-over__content\">\r\n            <ul className=\"pop-over__list\">\r\n              <li>\r\n                <button className='pop-over__item' onClick={()=>handleAction('add_card')}>\r\n                  Add card...\r\n                </button>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"pop-over__list\">\r\n              <li>\r\n                <button className='pop-over__item' onClick={()=>handleAction('delete_all_card')}>\r\n                  Delete all cards in this list...\r\n                </button>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"pop-over__list\">\r\n              <li>\r\n                <button className='pop-over__item' onClick={()=>handleAction('delete_list')}>\r\n                  Delete this list\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nListHeader.propTypes = {\r\n  list: PropTypes.object,\r\n  handleEditList: PropTypes.func,\r\n  handleOpenAddCard: PropTypes.func,\r\n  handleDeleteAllData: PropTypes.func,\r\n  handleDeleteList: PropTypes.func\r\n}\r\n\r\nexport default ListHeader","import \"./ChangeBackground.scss\";\r\n\r\nfunction ChangeBackground({ isChangeBg, setIsChangeBg, handleChange, backgroundColor }) {\r\n  const listBackground = [\r\n    \"blue\",\r\n    \"orange\",\r\n    \"green\",\r\n    \"red\",\r\n    \"purple\",\r\n    \"pink\",\r\n    \"green-light\",\r\n    \"blue-light\",\r\n    \"gray\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {isChangeBg && (\r\n        <div className=\"change-bg\">\r\n          <div className=\"change-bg__header\">\r\n            <span className=\"change-bg__title\">Colors</span>\r\n            <button\r\n              type=\"button\"\r\n              className=\"change-bg__close\"\r\n              onClick={() => setIsChangeBg(false)}\r\n            >\r\n              <svg\r\n                className=\"close__icon\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div className=\"change-bg__content\">\r\n            {listBackground.map((background, id) => (\r\n              <div className=\"change-bg__wrapper\" key={id}>\r\n                <label className=\"container\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"background\"\r\n                    value={background}\r\n                    onChange={handleChange}\r\n                    checked={backgroundColor === background}\r\n                  />\r\n                  <span className={\"checkmark theme--\"+background}></span>\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChangeBackground;\r\n","export const IconMenu = ({ className }) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className={className}\r\n  >\r\n    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n    <path d=\"M5 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm14 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-7 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n  </svg>\r\n);\r\n","import \"./Todo.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddCard from \"../AddCard\";\r\nimport AddCardForm from \"../AddCard/AddCardForm\";\r\nimport AddList from \"../AddList\";\r\nimport Card from \"../Card\";\r\nimport ListHeader from \"../ListHeader\";\r\nimport ChangeBackground from \"../ChangeBackground/ChangeBackground\";\r\nimport { IconMenu } from \"../shared/Icons\";\r\n\r\nfunction Todo() {\r\n  const [lists, setLists] = useState([]);\r\n  const [datas, setDatas] = useState([]);\r\n  const [isChangeBg, setIsChangeBg] = useState(false);\r\n  const [backgroundColor, setBackgroundColor] = useState(\"blue\");\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem(\"lists\"))) {\r\n      setLists(JSON.parse(localStorage.getItem(\"lists\")));\r\n      setDatas(JSON.parse(localStorage.getItem(\"datas\")));\r\n      setBackgroundColor(localStorage.getItem(\"theme\"));\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"lists\", JSON.stringify(lists));\r\n    localStorage.setItem(\"datas\", JSON.stringify(datas));\r\n  }, [lists, datas]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", backgroundColor);\r\n  }, [backgroundColor]);\r\n\r\n  function handleAddList(list) {\r\n    let idList = 0;\r\n    if (!lists.length) {\r\n      idList = 1;\r\n    } else {\r\n      idList = lists[lists.length - 1].id + 1;\r\n    }\r\n\r\n    let newList = {\r\n      id: idList,\r\n      title: list,\r\n      isAddOpen: false,\r\n    };\r\n    setLists([...lists, newList]);\r\n  }\r\n\r\n  function handleEditList(id, newList) {\r\n    const index = lists.findIndex((el) => el.id === id);\r\n    let tempArray = [...lists];\r\n    tempArray[index].title = newList;\r\n    setLists(tempArray);\r\n  }\r\n\r\n  function handleDeleteList(id) {\r\n    const index = lists.findIndex((el) => el.id === id);\r\n    let tempArray = [...lists];\r\n\r\n    handleDeleteAllData(tempArray[index].id);\r\n    tempArray.splice(index, 1);\r\n    setLists(tempArray);\r\n  }\r\n\r\n  const handleAddData = (input, listID) => {\r\n    let idData = 0;\r\n    if (!datas.length) {\r\n      idData = 1;\r\n    } else {\r\n      idData = datas[datas.length - 1].id + 1;\r\n    }\r\n\r\n    let newData = {\r\n      id: idData,\r\n      name: input,\r\n      listID: listID,\r\n    };\r\n\r\n    setDatas([...datas, newData]);\r\n  };\r\n\r\n  const handleEditData = (id, task) => {\r\n    const index = datas.findIndex((el) => el.id === id);\r\n    let tempArray = [...datas];\r\n    tempArray[index].name = task;\r\n    setDatas(tempArray);\r\n  };\r\n\r\n  const handleDeleteData = (index) => {\r\n    let tempArray = [...datas];\r\n    tempArray.splice(index, 1);\r\n    setDatas(tempArray);\r\n  };\r\n\r\n  function handleDeleteAllData(listID) {\r\n    let tempArray = [...datas];\r\n    const filtering = tempArray.filter((el) => el.listID === listID);\r\n    filtering.forEach(() =>\r\n      tempArray.splice(\r\n        tempArray.findIndex((el) => el.listID === listID),\r\n        1\r\n      )\r\n    );\r\n    setDatas(tempArray);\r\n  }\r\n\r\n  function handleOpenAddCard(id) {\r\n    const index = lists.findIndex((el) => el.id === id);\r\n    let tempArray = [...lists];\r\n    tempArray[index].isAddOpen = !tempArray[index].isAddOpen;\r\n    setLists(tempArray);\r\n  }\r\n\r\n  const handleMenuCard = (select, id) => {\r\n    const index = datas.findIndex((el) => el.id === id);\r\n    let tempArray = [...datas];\r\n    tempArray[index].listID = select;\r\n    setDatas(tempArray);\r\n\r\n    if (select === \"delete\") {\r\n      handleDeleteData(index);\r\n    }\r\n  };\r\n\r\n  function handleChangeBackground(event) {\r\n    setBackgroundColor(event.target.value);\r\n  }\r\n\r\n  function handleResize() {\r\n    window.innerWidth < 500 ? setIsMobile(true) : setIsMobile(false);\r\n  }\r\n\r\n  return (\r\n    <div className={`todo theme--` + backgroundColor}>\r\n      <div className=\"todo__header\">\r\n        <div className=\"todo__header__title\">\r\n          <div className=\"todo__header__name\">Todo App</div>\r\n          <span className=\"todo__header__credit\">\r\n            Made by{\" \"}\r\n            <a\r\n              className=\"credits__link\"\r\n              href=\"https://github.com/ilhamriz\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Ilhamriz\r\n            </a>\r\n          </span>\r\n        </div>\r\n        <button\r\n          className=\"todo__header__menu\"\r\n          onClick={() => setIsChangeBg(!isChangeBg)}\r\n        >\r\n          <IconMenu className=\"todo__header__menu__icon\" />\r\n          {isMobile ? null : \"Change background\"}\r\n        </button>\r\n      </div>\r\n      <div className=\"todo__canvas\" id=\"todo__canvas\">\r\n        {lists?.map((list, index) => (\r\n          <section key={list?.id} className=\"todo__list\">\r\n            <h2 className=\"hidden\">{list.title}</h2>\r\n\r\n            <ListHeader\r\n              list={list}\r\n              handleEditList={handleEditList}\r\n              handleOpenAddCard={handleOpenAddCard}\r\n              handleDeleteAllData={handleDeleteAllData}\r\n              handleDeleteList={handleDeleteList}\r\n            />\r\n\r\n            <ul className=\"todo__card\">\r\n              {datas\r\n                .filter((el) => el.listID === lists[index].id)\r\n                .map((data) => (\r\n                  <Card\r\n                    key={data.id}\r\n                    datas={datas}\r\n                    data={data}\r\n                    lists={lists}\r\n                    handleMenuCard={(select) => handleMenuCard(select, data.id)}\r\n                    handleEditData={handleEditData}\r\n                  />\r\n                ))}\r\n              <AddCardForm\r\n                list={list}\r\n                handleAddData={handleAddData}\r\n                handleOpenAddCard={handleOpenAddCard}\r\n              />\r\n            </ul>\r\n\r\n            <AddCard\r\n              list={list}\r\n              datas={datas}\r\n              handleOpenAddCard={handleOpenAddCard}\r\n            />\r\n          </section>\r\n        ))}\r\n\r\n        <AddList lists={lists} handleAddList={handleAddList} />\r\n      </div>\r\n\r\n      <ChangeBackground\r\n        isChangeBg={isChangeBg}\r\n        setIsChangeBg={setIsChangeBg}\r\n        handleChange={handleChangeBackground}\r\n        backgroundColor={backgroundColor}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import './App.scss';\r\nimport Todo from './components/Todo'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"main__container\">\r\n      <Todo />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport SnackbarProvider from \"./Provider/snackbar-provider\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SnackbarProvider>\r\n      <App />\r\n    </SnackbarProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}